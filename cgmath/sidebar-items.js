initSidebarItems({"fn":[["deg","Create a new angle, in degrees"],["dot","Dot product of two vectors."],["frustum","Create a perspective matrix from a view frustrum."],["one","Returns the multiplicative identity, `1`."],["ortho","Create an orthographic projection matrix."],["perspective","Create a perspective projection matrix."],["rad","Create a new angle, in radians"],["vec2","The short constructor."],["vec3","The short constructor."],["vec4","The short constructor."],["zero","Returns the additive identity, `0`."]],"macro":[["assert_approx_eq!",""],["assert_approx_eq_eps!",""]],"mod":[["conv","Constrained conversion functions for assisting in situations where type inference is difficult."],["prelude","This module contains the most common traits used in `cgmath`. By glob-importing this module, you can avoid the need to import each trait individually, while still being selective about what types you import."]],"struct":[["AffineMatrix3","A homogeneous transformation matrix."],["Basis2","A two-dimensional rotation matrix."],["Basis3","A three-dimensional rotation matrix."],["Decomposed","A generic transformation consisting of a rotation, displacement vector and scale amount."],["Deg","An angle, in degrees."],["Matrix2","A 2 x 2, column major matrix"],["Matrix3","A 3 x 3, column major matrix"],["Matrix4","A 4 x 4, column major matrix"],["Ortho","An orthographic projection with arbitrary left/right/bottom/top distances"],["Perspective","A perspective projection with arbitrary left/right/bottom/top distances"],["PerspectiveFov","A perspective projection based on a vertical field-of-view angle."],["Point2","A point in 2-dimensional space."],["Point3","A point in 3-dimensional space."],["Quaternion","A quaternion in scalar/vector form."],["Rad","An angle, in radians."],["Vector2","A 2-dimensional vector."],["Vector3","A 3-dimensional vector."],["Vector4","A 4-dimensional vector."]],"trait":[["Angle","Angles and their associated trigonometric functions."],["ApproxEq",""],["Array","An array containing elements of type `Element`"],["BaseFloat","Base floating point types"],["BaseInt","Base integer types"],["BaseNum","Base numeric types with partial ordering"],["ElementWise","Element-wise arithmetic operations. These are supplied for pragmatic reasons, but will usually fall outside of traditional algebraic properties."],["EuclideanVector","Vectors that also have a dot (or inner) product."],["Matrix","A column-major matrix of arbitrary dimensions."],["One","Defines a multiplicative identity element for `Self`."],["PartialOrd","A trait providing a partial ordering."],["Point","Points in a Euclidean space with an associated vector space, `Self::Vector`."],["Rotation","A trait for a generic rotation. A rotation is a transformation that creates a circular motion, and preserves at least one point in the space."],["Rotation2","A two-dimensional rotation."],["Rotation3","A three-dimensional rotation."],["SquareMatrix","A column-major major matrix where the rows and column vectors are of the same dimensions."],["Transform","A trait representing an affine transformation that can be applied to points or vectors. An affine transformation is one which"],["Transform2",""],["Transform3",""],["Vector","Vectors that can be added together and multiplied by scalars."],["Zero","Defines an additive identity element for `Self`."]]});